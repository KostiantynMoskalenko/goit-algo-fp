"""
Необхідно написати програму на Python, яка імітує велику кількість кидків
кубиків, обчислює суми чисел, які випадають на кубиках, і визначає ймовірність
кожної можливої суми.

Створіть симуляцію, де два кубики кидаються велику кількість разів. Для
кожного кидка визначте суму чисел, які випали на обох кубиках. Підрахуйте,
скільки разів кожна можлива сума (від 2 до 12) з’являється у процесі
симуляції. Використовуючи ці дані, обчисліть імовірність кожної суми.

На основі проведених імітацій створіть таблицю або графік, який відображає
ймовірності кожної суми, виявлені за допомогою методу Монте-Карло.

Таблиця ймовірностей сум при киданні двох кубиків виглядає наступним чином.

Сума	Імовірність
2	2.78% (1/36)
3	5.56% (2/36)
4	8.33% (3/36)
5	11.11% (4/36)
6	13.89% (5/36)
7	16.67% (6/36)
8	13.89% (5/36)
9	11.11% (4/36)
10	8.33% (3/36)
11	5.56% (2/36)
12	2.78% (1/36)

Порівняйте отримані за допомогою методу Монте-Карло результати з аналітичними
розрахунками, наведеними в таблиці вище.
"""

# для одного кубика:
import random
from collections import defaultdict

import matplotlib.pyplot as plt

nums = 1_000_000

counts = defaultdict(int)

for _ in range(nums):
    dice = random.randint(1, 6)
    # dice_two = random.randint(1, 6)
    counts[dice] += 1  # counts[dice + dice_two] += 1

probabilities = {key: count / nums for key, count in counts.items()}
print(probabilities)
print("Dice | Probability")
print("-----|------------")
for dice, prob in probabilities.items():
    print(f"{dice} | {prob:.2%}")


plt.bar(probabilities.keys(), probabilities.values())  # noqa
plt.show()